import java.io.BufferedInputStream;
import java.io.FileInputStream;
import java.security.KeyFactory;
import java.security.PublicKey;
import java.security.Signature;
import java.security.spec.X509EncodedKeySpec;

class VerSig {

    public static void main(String[] args) {
        try {
            // read in the encoded public key bytes.
            FileInputStream keyfis = new FileInputStream("src/main/java/suepk");
            byte[] encKey = new byte[keyfis.available()];
            keyfis.read(encKey);
            keyfis.close();
            // obtaining key specification
            X509EncodedKeySpec pubKeySpec = new X509EncodedKeySpec(encKey);
            //KeyFactory object to do the conversion
            KeyFactory keyFactory = KeyFactory.getInstance("DSA", "SUN");
            //using the KeyFactory object to generate a PublicKey from the key specification
            PublicKey pubKey = keyFactory.generatePublic(pubKeySpec);
            //signature bytes from the file specified as the second command line argument.
            FileInputStream sigfis = new FileInputStream("src/main/java/sig");
            byte[] sigToVerify = new byte[sigfis.available()];
            sigfis.read(sigToVerify);
            sigfis.close();
            Signature sig = Signature.getInstance("SHA1withDSA", "SUN");
            //initialize the Signature object
            sig.initVerify(pubKey);

            FileInputStream datafis = new FileInputStream("src/main/java/input.txt");
            BufferedInputStream bufin = new BufferedInputStream(datafis);
            byte[] buffer = new byte[1024];
            int len;
            while (bufin.available() != 0) {
                len = bufin.read(buffer);
                sig.update(buffer, 0, len);
            };
            bufin.close();
            boolean verifies = sig.verify(sigToVerify);
            System.out.println("signature verifies: " + verifies);
            //The verifies value will be true if the alleged signature (sigToVerify) is the actual signature
            //of the specified data file generated by the private key corresponding to the public key pubKey.
        } catch (Exception e) {
            System.err.println("Caught exception " + e.toString());
        }
    }

}